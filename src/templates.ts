import { TemplateData } from './types';

/**
 * Get template content based on file extension
 */
export function getTemplateForExtension(extension: string): string {
  const templateData: TemplateData = {
    currentDate: new Date().toLocaleDateString(),
    currentTime: new Date().toLocaleTimeString(),
  };

  switch (extension) {
  case '.md':
    return getMarkdownTemplate(templateData);

  case '.json':
    return getJsonTemplate(templateData);

  case '.js':
    return getJavaScriptTemplate(templateData);

  case '.jsx':
    return getReactJsxTemplate(templateData);

  case '.ts':
    return getTypeScriptTemplate(templateData);

  case '.tsx':
    return getReactTypeScriptTemplate(templateData);

  case '.py':
    return getPythonTemplate(templateData);

  default:
    return getDefaultTemplate(templateData, extension);
  }
}

function getMarkdownTemplate(data: TemplateData): string {
  return `# ðŸ““ Scratch Note

**Created:** ${data.currentDate} at ${data.currentTime}
**Tags:**

---

## Notes

-

## TODO

- [ ]

---

_Generated by Scratchy extension_`;
}

function getJsonTemplate(data: TemplateData): string {
  return `{
  "name": "scratch_file",
  "created": "${data.currentDate}",
  "description": "Scratch file for quick testing",
  "data": {}
}`;
}

function getJavaScriptTemplate(data: TemplateData): string {
  return `// JavaScript Scratch File
// Created: ${data.currentDate} at ${data.currentTime}

console.log('Hello from scratch!');

// Your code here
function main() {
  // TODO: Add your logic here
}

main();`;
}

function getReactJsxTemplate(data: TemplateData): string {
  return `// React JSX Scratch File
// Created: ${data.currentDate} at ${data.currentTime}

import React from 'react';

function ScratchComponent() {
  return (
    <div>
      <h1>Scratch Component</h1>
      <p>Created on ${data.currentDate}</p>
    </div>
  );
}

export default ScratchComponent;`;
}

function getTypeScriptTemplate(data: TemplateData): string {
  return `// TypeScript Scratch File
// Created: ${data.currentDate} at ${data.currentTime}

interface ScratchData {
  id: number;
  name: string;
  created: string;
}

function main(): void {
  const data: ScratchData = {
    id: 1,
    name: 'scratch',
    created: '${data.currentDate}',
  };

  console.log('Hello from TypeScript scratch!', data);
}

main();`;
}

function getReactTypeScriptTemplate(data: TemplateData): string {
  return `// React TypeScript Scratch File
// Created: ${data.currentDate} at ${data.currentTime}

import React from 'react';

interface ScratchComponentProps {
  title?: string;
}

const ScratchComponent: React.FC<ScratchComponentProps> = ({
  title = 'Scratch Component',
}) => {
  return (
    <div>
      <h1>{title}</h1>
      <p>Created on ${data.currentDate}</p>
    </div>
  );
};

export default ScratchComponent;`;
}

function getPythonTemplate(data: TemplateData): string {
  return `# Python Scratch File
# Created: ${data.currentDate} at ${data.currentTime}

def main():
    """Main function for scratch file."""
    print("Hello from Python scratch!")

    # TODO: Add your code here
    data = {
        "name": "scratch",
        "created": "${data.currentDate}",
        "type": "python"
    }

    print(f"Data: {data}")

if __name__ == "__main__":
    main()`;
}

function getDefaultTemplate(data: TemplateData, extension: string): string {
  return `// Scratch File
// Created: ${data.currentDate} at ${data.currentTime}
// Type: ${extension}

// Your code here`;
}
